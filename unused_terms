## text-Ersetzung (Labels [] aus den Listings entfernen)
sed -i 's/\\lstinputlisting\[[a-zA-Z0-9\_.:]*\]/\/lstinputlisting/g' *.tex # removing code-labels

# convert notes of zim to pmwiki format
fctconvertzim2pmwiki()
{
	cd ~/Notes/home
	text=notes.txt
	textname=notes_.txt
  cp $text notes_.txt
  sed -i "s/\/\//\'\'/g" $textname
  sed -i "s/http:''/http:\/\//g" $textname
  sed -i "s/\*\*/'''/g" $textname
  sed -i "s/’/'/g" $textname
  sed -i "s/\t/*/g" $textname
	mv $textname $HOME
	cd $HOME
	gvim $textname &
}

# convert a blog entry
# takes as input a zim-desktop-wiki file
fctczim()
{
  cp "$1" "$1.bak"
  sed -i 's/Content-Type: .*//g' "$1.bak"
  sed -i 's/Wiki-Format: .*//g' "$1.bak"
  sed -i 's/Creation-Date: .*//g' "$1.bak"
  sed -i 's/Created .*//g' "$1.bak"
  title=$(sed -e 's/=====/&/g' "$1.bak" | awk 'BEGIN {FS="======"}{print $2}') # get the title
  sed -i "s/\/\//\'\'/g" "$1.bak"
  sed -i "s/http:''/http:\/\//g" "$1.bak"
  sed -i "s/\*\*/'''/g" "$1.bak"
  sed -i "s/’/'/g" "$1.bak"

  titleformated=""
  titleformated=$(echo $title | sed -e 's/^[ \t]*//')         # remove trailing blanks
  titleformated=$(echo $titleformated | sed -e 's/ /-/g')     # replace blanks with -
  titleformated=$(echo $titleformated | sed -e 's/:/-/g')     # replace cons with -
  sed -i 's/=====.*//g' "$1.bak" # remove heading
  sed -i 's/===[^=]/!!/g' "$1.bak"
  sed -i 's/===//g' "$1.bak"
  sed -i 's/<script .*/(:html:)&(:htmlend:)/g' "$1.bak"
  sed -i 's/{{.*\//Attach:/g' "$1.bak"
  sed -i 's/}}//g' "$1.bak"
  tr '\n' '^' < "$1.bak" > "$1.bak.final"
  sed -i "s/%/%25/g" "$1.bak.final"
  sed -i "s/\^/%0a/g" "$1.bak.final"
  sed -i "s/%0a%0a%0a%0a%0a%0a%0a//g" "$1.bak.final"
  sed -i 's/"/\\"/g' "$1.bak.final"
	body=$(sed -e 's/\//\\\//g' "$1.bak.final")

  cp $HOME/bin/"Blog.Muster" "Blog.$titleformated"
  sed -i "s/TITLEFORMATED/$titleformated/g" "Blog.$titleformated"
  title=$(echo $title | sed -e 's/^[ \t]*//') # remove trailing blanks
  sed -i "s/TITLE/$title/g" "Blog.$titleformated"
  sed -i "s/HIER/$body/g" "Blog.$titleformated"

  #### upload the images declared under Blog/$titleformated
  ruby $HOME/bin/textupload_blog.rb "Blog.$titleformated" $PWD
  ruby $HOME/bin/mkdir_blog.rb "$titleformated"
  for img in "${1%.txt}"/*.jpg; do ruby $HOME/bin/images_blog.rb "$titleformated" "$img"; done;
  rm $1.bak "$1.bak.final" "Blog.$titleformated"
}

