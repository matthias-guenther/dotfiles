# Basics {{{
# Default shell {{{

set -g default-shell /bin/zsh

# }}}
# Centering the windows list {{{

set -g status-justify centre

# }}}
# Mouse support {{{

setw -g mode-mouse on

# }}}
# Increase scroll-back history {{{

set -g history-limit 5000

# }}}
# Renumber windows when one is closed {{{

set -g renumber-windows on

# }}}
# No automatic title {{{

setw -g automatic-rename off

# }}}
# Enable numbering for windows + panes {{{

set -g base-index 1       # windows start with index 1
setw -g pane-base-index 1 # panes also start with index 1

# }}}
# Response time for commands {{{

set -sg escape-time 1

# }}}
# Prefix remap to <Ctrl-a>{{{

unbind C-b           # the old Prefix mapping is gone, we can use it for a new command
bind C-a send-prefix # Prefix a twice will send the command throughout tmux to other programs
set -g prefix C-a    # remap of Prefix (-g says it's global to all sessions)

# }}}
# Enable vi for buffer editing {{{

setw -g mode-keys vi

# }}}
# Identifying activity in other windows {{{

setw -g monitor-activity on
set -g visual-activity on

# }}}
# }}}
# Mappings {{{
bind S choose-session # choose which tmux session you want to use

# `Prefix r` ... to reload the tmux.conf {{{

bind r source-file ~/.tmux.conf \; display "Reloaded!"

# }}}
# `h,j,k,l` ... moving around in panes (Vim way) {{{

bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# }}}
# `H,J,K,L` ... resizing panes (tmux style) {{{
# the -r options let's repeat the Prefix key only once and the defined key within a repeat time (500ms)

bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# }}}
# `Prefix-h, Prefix-l` ... moving to the left|right window {{{

bind-key -r C-h select-window -t :-
bind-key -r C-l select-window -t :+

# }}}
# Remapping copy and paste the Vim way {{{
# `Prefix <space>` ... enable copy mode (<Enter>|<Ctrl>c will leave this mode)
# `v` ... Visual mode
# `y` ... yanks the text into the buffer and use `Prefix <Ctrl-c>`
#         to copy the content of the buffer into the clipboard
# `Prefix p` ... paste the text into the current tmux session

unbind [ # this is the former command to go into the Escape mode in tmux
bind Space copy-mode
unbind p
bind p paste-buffer
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

# }}}
# Clipboard and Linux {{{
# `Prefix <Ctrl-c>` ... copy tmux paste buffer to clipboard {{{

bind C-c run "tmux show-buffer | xsel -i -b"

# }}}
# }}}
# `Prefix s, Prefix v` ... horizontal/vertical split (window splitting the Vim way)  {{{

bind v split-window -h
bind s split-window -v

# }}}
# `Prefix-C-a` ... switch between two latest windows in tmux  {{{

bind-key C-a last-window

# }}}
# }}}
# Colors + style of windows and panes {{{
# White text on dark background for status messages {{{

set -g status-fg white
set -g status-bg black
set -g window-status-activity-attr bold

# }}}
# Active window is red and the other are cyan {{{

setw -g window-status-fg cyan
setw -g window-status-bg default
setw -g window-status-attr dim

setw -g window-status-current-fg white
setw -g window-status-current-bg red
setw -g window-status-current-attr bright

# }}}
# Changing pane divider colors {{{

set -g pane-border-fg colour245
set -g pane-border-bg black
set -g pane-active-border-fg colour39
set -g pane-active-border-bg black

# }}}
# Tmux command and status line customizations {{{

set -g message-fg colour16
set -g message-bg colour221
set -g message-attr bold

# }}}
# }}}
# Aggressive resizing {{{

# Rather than constraining window size to the maximum size of any client
# connected to the session, constrain window size to the maximum size of any
# client connected to that window.
setw -g aggressive-resize on

# }}}
# Status bar {{{
# actual left-status: Session <number> <Windows-Index> <Pane-Index>
# actual right-status: <day> <month> <time>

set -g status-utf8 on
set -g status-interval 60 # status-line renewal Intervall to 60 seconds => resource saver
set -g status-left-length 40
set -g status-left "#[fg=green]#S #[fg=yellow]#I #[fg=cyan]#P#[fg=green]"

set -g status-right "#[fg=cyan]%d %b %R"
set -g status-right "#[fg=green]â–¶ #(~/ownCloud/dotfiles/bin/battery Discharging; ~/ownCloud/dotfiles/bin/battery Charging) | #[fg=cyan]%e %B %R"
# set -g status-right "#(~/bin/battery Discharging; ~/bin/battery Charging) | %e %B %R"

# }}}
